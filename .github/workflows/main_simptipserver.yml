name: Deploy to EC2

on:
  push:
    branches:
      - main  # Trigger deployment on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Set up Node.js
      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3. Install dependencies
      - name: Install Dependencies
        run: |
          cd server
          npm install

      # 4. Set up SSH Agent with the deploy key for EC2 access
      - name: Setup SSH Agent for EC2
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # 5. Deploy to EC2 via SSH
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            #!/bin/bash
            set -e

            # 5a. Add GitHub's SSH host key to known_hosts to prevent host verification errors
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts

            # 5b. Transfer the GitHub deploy key to EC2
            echo "${{ secrets.EC2_GITHUB_DEPLOY_KEY }}" > ~/.ssh/github_deploy_key
            chmod 600 ~/.ssh/github_deploy_key

            # 5c. Configure SSH to use the deploy key for GitHub
            echo -e "Host github.com\n  HostName github.com\n  User git\n  IdentityFile ~/.ssh/github_deploy_key\n" >> ~/.ssh/config

            # 5d. Clone the repository if it doesn't exist
            if [ ! -d "/home/ec2-user/simpBack" ]; then
              git clone git@github.com:dstein131/simpBack.git /home/ec2-user/simpBack
            fi

            # 5e. Navigate to the server directory
            cd /home/ec2-user/simpBack/server

            # 5f. Pull the latest changes
            git pull origin main

            # 5g. Install dependencies
            npm install

            # 5h. Start or restart the application with PM2
            pm2 stop express-app || true
            pm2 start server.js --name "express-app"
            pm2 save
          protocol: tcp
          timeout: 30s
          command_timeout: 10m
          proxy_port: 22
          proxy_protocol: tcp
          proxy_timeout: 30s
